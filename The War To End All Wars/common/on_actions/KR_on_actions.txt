on_actions = {
	on_startup = {
		effect = {
			#Opinion Modifiers Setup
			every_country = { country_event = kr.political.40 }
			#Party Popularity Setup
			every_country = { country_event = kr.political.11 }
			#Intro Event
			every_country = {
				limit = { is_ai = no }
				country_event = kr.political.24
			}
			#Kill those cores
			random_country = {
				limit = { is_ai = yes }
				country_event = kr.political.10
			}
			#Faction Opinion Modifiers
			every_country = {
				limit = {
					OR = {
						is_in_faction_with = GER
						is_subject_of = GER
					}
				}
				country_event = kr.political.50
			}
			every_country = {
				limit = {
					is_in_faction_with = CAN
				}
				country_event = kr.political.52
			}
			every_country = {
				limit = {
					is_in_faction_with = FRA
				}
				country_event = kr.political.54
			}
			GUA = {
				set_variable = { var = UFC_power value = 50 }
				CA_SET_UFC_VAR = yes
				add_offsite_building = { type = UFC_idea level = UFC_power }
				remove_ideas = { GUA_united_fruit_start_clone }
				add_ideas = { GUA_united_fruit }
			}
			CAF = {
				set_variable = { var = CAF_socialist_anger value = 34 }
				set_variable = { var = CAF_british_anger value = 21 }
			}
		}
	}

	#ROOT is subject FROM is previous overlord
	on_subject_free = {
		effect = {
			log = "[GetDateText] [Root.GetName]: on_subject_free FORMER OVERLORD: [From.GetName]"
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
			clr_country_flag = KR_can_be_annexed
			clr_country_flag = KR_can_become_free
		}
	}

	#ROOT is subject FROM is overlord
	on_subject_autonomy_level_change = {

		effect = {
			log = "[GetDateText] [Root.GetName]: on_subject_autonomy_level_change OVERLORD: [From.GetName]"
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
		}
	}

	#ROOT is subject FROM is overlord
	on_subject_annexed = {
		effect = {
			log = "[GetDateText] [Root.GetName]: on_subject_annexed OVERLORD: [From.GetName]"
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
			clr_country_flag = KR_can_be_annexed
			clr_country_flag = KR_can_become_free
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			log = "[GetDateText] [Root.GetName] has annexed [From.GetName]"
			FROM = {
				clr_country_flag = KR_can_raise_autonomy_level
				clr_country_flag = KR_can_lower_autonomy_level
				clr_country_flag = KR_can_be_annexed
				clr_country_flag = KR_can_become_free
			}
		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
			log = "[GetDateText] [Root.GetName] has declared war on [From.GetName]"
			FROM = { set_country_flag = had_war }
			ROOT = { set_country_flag = had_war }
		}
	}

	#ROOT is winner #FROM is loser
	on_peaceconference_ended = {
		effect = {
			log = "[GetDateText] [Root.GetName] (ROOT) on_peaceconference_ended [From.GetName] (FROM)"
		}
	}

	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			log = "[GetDateText] [Root.GetName] has capitulated to [From.GetName]"
			news_event = { id = country_capitulated.0 days = 0 }
			if = {
				limit = {
					OR = {
						is_in_faction_with = GER
						is_subject_of = GER
					}
					capital_scope = {
						is_on_continent = asia
					}
				}
				GER = {
					country_event = { id = asiapeace.1 days = 20 }
				}
			}
			if = {
				limit = {
					OR = {
						is_in_faction_with = HOL
						is_subject_of = HOL
					}
					capital_scope = {
						is_on_continent = asia
					}
				}
				HOL = {
					country_event = { id = asiapeace.4 days = 20 }
				}
			}
		}
	}

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
			log = "[GetDateText] [Root.GetName] has uncapitulated"
		}
	}

	on_leave_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_leave_faction FROM = [From.GetName]"
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}

				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
		}
	}

	# FROM = country giving access, ROOT = country asking for access
	on_military_access = {
		effect = {
			log = "[GetDateText] [Root.GetName] has asked for military access to [From.GetName]"
		}
	}

	# FROM = country receiving access, ROOT = country offering access
	on_offer_military_access = {
		effect = {
			log = "[GetDateText] [Root.GetName] has offered military access to [From.GetName]"
		}
	}

	# FROM = country being called, ROOT = country calling
	on_call_allies = {
		effect = {
			log = "[GetDateText] [Root.GetName] has called its ally [From.GetName] into its war"
		}
	}

	# FROM = country being joined, ROOT = country joining
	on_join_allies = {
		effect = {
			log = "[GetDateText] [Root.GetName] is joining [From.GetName] in its war"
		}
	}

	# FROM = country receiving goods, ROOT = country sending goods
	on_lend_lease = {
		effect = {
			log = "[GetDateText] [Root.GetName] is offering a lend lease to [From.GetName]"
		}
	}

	# FROM = country requesting goods, ROOT = country sending goods
	on_incoming_lend_lease = {
		effect = {
			log = "[GetDateText] [From.GetName] has requested a lend lease from [From.GetName]"
		}
	}

	# FROM = country receiving volunteers, ROOT = country sending volunteers
	on_send_volunteers = {
		effect = {
			log = "[GetDateText] [Root.GetName] is sending volunteers to [From.GetName]"
		}
	}

	# FROM = country to which they're sent, ROOT = sending country
	on_send_expeditionary_force = {
		effect = {
			log = "[GetDateText] [Root.GetName] is sending an expeditionary force to [From.GetName]"
		}
	}

	# FROM = country from which the forces are returning, ROOT = country who sent them
	on_return_expeditionary_forces = {
		effect = {
			log = "[GetDateText] [Root.GetName] is recalling its expeditionary force from [From.GetName]"
		}
	}

	# FROM = country requesting them, ROOT = requesting country
	on_request_expeditionary_forces = {
		effect = {
			log = "[GetDateText] [From.GetName] has requested expeditionary forces from [Root.GetName]"
		}
	}

	# FROM = country on whom the wargoal is being generated, ROOT = country generating wargoal
	on_generate_wargoal = {
		effect = {
			log = "[GetDateText] [Root.GetName] is generating a wargoal on [From.GetName]"
		}
	}

	# FROM = country giving control of the state, ROOT = country asking for control of the state
	on_ask_for_state_control = {
		effect = {
			log = "[GetDateText] [Root.GetName] is asking for state control from [From.GetName]"
		}
	}

	# FROM = country accepting control of the state, ROOT = country giving control of the state
	on_give_state_control = {
		effect = {
			log = "[GetDateText] [Root.GetName] is giving state control to [From.GetName]"
		}
	}

	#FROM is state #ROOT is broken as hell
	on_nuke_drop = {

		effect = {
			news_event = { id = nuke_dropped.2 days = 1}
			news_event = { id = nuke_dropped.3 days = 1}
			news_event = { id = nuke_dropped.4 days = 1}
			news_event = { id = nuke_dropped.5 days = 1}
			news_event = { id = nuke_dropped.6 days = 1}
			news_event = { id = nuke_dropped.7 days = 1}
			news_event = { id = nuke_dropped.8 days = 1}
			news_event = { id = nuke_dropped.9 days = 1}
			news_event = { id = nuke_dropped.10 days = 1}
			news_event = { id = nuke_dropped.11 days = 1}
			news_event = { id = nuke_dropped.12 days = 1}
			news_event = { id = nuke_dropped.13 days = 1}
			news_event = { id = nuke_dropped.14 days = 1}
			news_event = { id = nuke_dropped.15 days = 1}
		}
		random_events = {
			100 = nuke_dropped.0
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}

	#used when puppeting in a peace conference
	#ROOT = nation being puppeted, FROM = overlord
	on_puppet = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_puppet FROM = [From.GetName]"
		}
	}

	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
	#ROOT = nation being released, FROM = overlord
	on_release_as_puppet = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_release_as_puppet FROM = [From.GetName]"
		}
	}

	#ROOT is free nation FROM is releaser
	on_release_as_free = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_release_as_free FROM = [From.GetName]"
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_offer_join_faction FROM = [From.GetName]"
		}
	}

	#FROM is faction leader on join faction requests. THIS DOES NOT FIRE ON ADD_TO_FACTION EFFECT! USE ON_OFFER_JOIN_FACTION!
	on_join_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_join_faction FROM = [From.GetName]"
		}
	}

	# When a new faction is formed
	on_faction_formed = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_faction_formed"
		}
	}

	on_government_change = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_government_change"
			country_event = { id = kr.political.11 days = 1 } #party popularity change

			if = {
				limit = {
					tag = BRA
					not_has_elected_government = yes
				}
				set_country_flag = BRA_is_dictatorship
			}
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_state_control_changed OLD CONTROLLER: [From.GetName] STATE: [From.From.GetName]"
		}
	}

	on_new_term_election = {
		effect = {
			### Albania ###
			if = {
				limit = { tag = ALB }
				country_event = { id = albania.3 }
				country_event = { id = albania.30 }
			}
			### Argentina ###
			if = {
				limit = { tag = ARG }
				country_event = { id = argdem.5 }
				country_event = { id = argdem.6 }
				country_event = { id = argdem.7 }
				country_event = { id = argdem.71 }
			}
			### Australasia ###
			if = {
				limit = { tag = AST }
				country_event = { id = austral.10 }
				country_event = { id = austral.50 }
				country_event = { id = austral.53 }
			}
			### Austria ###
			if = {
				limit = { tag = AUS }
				country_event = { id = aus.elections.100 }
			}
			### Belgium ###
			if = {
				limit = { tag = BEL}
				country_event = { id = bel.1000 }
				country_event = { id = bel.1001 }
				country_event = { id = belind.14 }
			}
			### Brazil ###
			if = {
				limit = { tag = BRA }
				country_event = { id = bra.40 }
				country_event = { id = bra.45 }
				country_event = { id = bra.50 }
				country_event = { id = bra.55 }
				country_event = { id = bra.60 }
				country_event = { id = bra.65 }
				country_event = { id = bra.70 }
			}
			### Costa Rica ###
			if = {
				limit = { tag = COS }
				country_event = { id = cos.4 }
				country_event = { id = cos.71 }
				country_event = { id = cos.86 }
				country_event = { id = cos.91 }
				country_event = { id = cos.99 }
			}
			### Cuba ###
			if = {
				limit = { tag = CUB }
				country_event = { id = cubaflavor.12 }
				country_event = { id = cubaflavor.13 }
				country_event = { id = cubaflavor.14 }
				country_event = { id = cubaflavor.17 }
			}
			### Egypt ###
			if = {
				limit = { tag = EGY }
				country_event = { id = egy.5 }
				country_event = { id = egy.6 }
				country_event = { id = egy.137 }
				country_event = { id = egy.138 }
			}
			### Flanders ###
			if = {
				limit = { tag = FLN }
				country_event = { id = fln.101 } #Flemish Generic
			}
			### FOP ###
			if = {
				limit = { tag = FOP }
				country_event = { id = fop.17 } #Only 1938 Elections
			}
			### Germany ###
			if = {
				limit = { tag = GER }
				country_event = gerdom.27 #1937
				country_event = gerdom.32 #1937 (Election Cancelled)
				country_event = gerdom.33 #1942
				country_event = gerdom.37 #1942 (Election Cancelled)
			}
			### Greece ###
			if = {
				limit = { tag = GRE }
				country_event = gre.50 #Pre-Monarchy referendum
				country_event = gre.51 #Post-Monarchist Victory
				country_event = gre.52 #Post-Republican Victory
			}
			### Netherlands ###
			if = {
				limit = { tag = HOL }
				country_event = { id = hol.5 }
			}
			### Republic of Italy ###
			if = {
				limit = { tag = ITA	}
				country_event = { id = ita.12 } #1936
				country_event = { id = ita.19 } #1941
				country_event = { id = ita.20 } #1941 (Kingdom)
			}
			### Japan ###
			if = {
				limit = { tag = JAP }
				country_event = { id = japdom.3 } #1936
				country_event = { id = japdom.54 } #1940
				country_event = { id = japdom.55 } #1944
			}
			### Liberia ###
			if = {
				limit = { tag = LIB }
				country_event = { id = LIB.3 } #1939
			}
			### Nicaragua ###
			if = {
				limit = { tag = NIC }
				country_event = { id = nic.9 }
				country_event = { id = nic.57 }
				country_event = { id = nic.76 }
			}
			### Norway ###
			if = {
				limit = { tag = NOR }
				country_event = { id = norway.14 } #1936
				country_event = { id = norway.30 } #1939
				country_event = { id = norway.33 } #1942
			}
			### Panama ###
			if = {
				limit = { tag = PAN }
				country_event = { id = panama.22 } #1940
				country_event = { id = panama.23 } #1940, military
			}
			### Paraguay ###
			if = {
				limit = { tag = PAR }
				country_event = { id = par.15 } #1941
				country_event = { id = par.16 }	#1946 (Estigarribato)
				country_event = { id = par.19 } #1946
				country_event = { id = par.17 }	#1951 (Estigarribato)
				country_event = { id = par.21 }	#1951
				country_event = { id = par.18 }	#1956 (Estigarribato)
				country_event = { id = par.22 }	#1956
			}
			### Poland ###
			if = {
				limit = { tag = POL }
				country_event = { id = poland.45 }
				country_event = { id = poland.46 }
				country_event = { id = poland.47 }
				country_event = { id = poland.48 }
				country_event = { id = poland.49 }
			}
			### Peru ###
			if = {
				limit = { tag = PRU }
				country_event = { id = pru.108 }
			}
			### South Africa ###
			if = {
				limit = { tag = SAF }
				country_event = { id = saf.26 }
				country_event = { id = saf.90 }
				country_event = { id = saf.91 }
				country_event = { id = saf.93 }
			}
			### Scandinavia ###
			if = {
				limit = { tag = SCA }
				country_event = { id = scandinavia.3 }
				country_event = { id = scandinavia.7 }
				country_event = { id = scandinavia.11 }
			}
			### Serbia ###
			if = {
				limit = { tag = SER }
				country_event = { id = serbia.6 }
				country_event = { id = serbia.7 }
				country_event = { id = serbia.8 }
				country_event = { id = serbia.9 }
			}
			### Siam ###
			if = {
				limit = { tag = SIA }
				country_event = { id = siamn.23 } #1936
			}
			### Switzerland ###
			if = {
				limit = { tag = SWI }
				country_event = { id = swiss.51 }
			}
			### Two Sicilies ###
			if = {
				limit = { tag = SIC }
				country_event = { id = sic.10 }
				country_event = { id = sic.11 }
			}
			### Sardinia ###
			if = {
				limit = { tag = SRD }
				country_event = { id = srd.29 }
				country_event = { id = srd.30 }
			}
			### Uruguay ###
			if = {
				limit = { tag = URG }
				country_event = { id = urg.20 }
				country_event = { id = urg.21 }
				country_event = { id = urg.22 }
				country_event = { id = urg.30 }
				country_event = { id = urg.31 }
				country_event = { id = urg.32 }
			}
			### Venezuela ###
			if = {
				limit = { tag = VEN }
				country_event = { id = ven.3 }
				country_event = { id = ven.29 }
				country_event = { id = ven.30 }
				country_event = { id = ven.31 }
				country_event = { id = ven.32 }
			}
			### Wallonia ###
			if = {
				limit = { tag = WLL }
				country_event = { id = wll.718 }
			}
			### United States of America ###
			if = {
				limit = { tag = USA }
				country_event = { id = ustates.34 }
				country_event = { id = ustates.35 }
				country_event = { id = ustates.203 }
				country_event = { id = ustates.207 }
				country_event = { id = ustates.213 }
				country_event = { id = ustates.218 }
			}
			### Pacific States of America ###
			if = {
				limit = { tag = CAL }
				country_event = { id = pacificstates.6 }
				country_event = { id = pacificstates.11 }
				country_event = { id = pacificstates.16 }
				country_event = { id = pacificstates.21 }
			}
			### Combined Syndicates of America ###
			if = {
				limit = { tag = CSA }
				country_event = { id = csa.27 }
				country_event = { id = csa.30 }
				country_event = { id = csa.33 }
				country_event = { id = csa.36 }
				country_event = { id = csa.51 }
			}
			### American Union State ###
			if = {
				limit = { tag = TEX }
				country_event = { id = unionstate.10 }
			}
			### United States of Mexico ###
			if = {
				limit = { tag = MEX }
				country_event = { id = mexico.4 }
				country_event = { id = mexico.11 }
				country_event = { id = mexico.26 }
				country_event = { id = mexico.27 }
				country_event = { id = mexico.81 }
				country_event = { id = mexico.82 }
				country_event = { id = mexico.83 }
			}
			### Yucatan ###
			if = {
				limit = { tag = YUC }
				country_event = { id = yucatan.20 }
				country_event = { id = yucatan.21 }
			}
			### Hawaii ###
			if = {
				limit = { tag = HAW }
				country_event = { id = hawaii.27 }
				country_event = { id = hawaii.34 }
				country_event = { id = hawaii.64 }
			}

		}
	}

	on_army_leader_daily = {
	}

	# From is owner country
	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					NOT = { has_unit_leader_flag = recent_leader_event }
					check_variable = { random < 0.05 }
				}
				log = "[GetDateText] [Root.GetName] on_army_leader_won_combat [From.GetName]"
				set_unit_leader_flag = unit_leader_event
				unit_leader_event = { id = unit_leader.10 }
			}
		}
	}

	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					NOT = { has_unit_leader_flag = recent_leader_event }
					check_variable = { random < 0.06 }
				}
				log = "[GetDateText] [Root.GetName] on_army_leader_lost_combat [From.GetName]"
				set_unit_leader_flag = unit_leader_event
				unit_leader_event = { id = unit_leader.10 }
			}
		}
	}

	on_army_leader_promoted = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_army_leader_promoted [From.GetName]"
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}
}
